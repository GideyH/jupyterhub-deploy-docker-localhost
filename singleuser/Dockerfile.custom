# Version: 20180601
ARG DOCKER_NOTEBOOK_IMAGE
FROM $DOCKER_NOTEBOOK_IMAGE
ARG JUPYTERHUB_VERSION
ARG NB_USER_PASS
ARG GITHUB_ACCESS_TOKEN
ARG GITHUB_CLIENT_ID
ARG GITHUB_CLIENT_SECRET

LABEL maintainer='herman.tolentino@gmail.com'

RUN python3 -m pip install --no-cache-dir --upgrade pip && \
    conda update conda
    #python3 -m pip install --no-cache jupyterhub==$JUPYTERHUB_VERSION

USER root

ENV DEBIAN_FRONTEND noninteractive

WORKDIR /home/jovyan/work

RUN \
    ln -sf /bin/bash /bin/sh && \
    ln -s /bin/tar /bin/gtar && \
    echo "jovyan ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers && \
    # install jupyterlab, jupyter_client
    conda config --set ssl_verify no && \
    conda update openssl ca-certificates certifi && \
    conda config --set ssl_verify yes

# Code below based on https://github.com/jenkinsci/docker/issues/543
# For addressing errors: "E: Unable to fetch some archives", "Hash Sum mismatch"
COPY 99fixbadproxy /etc/apt/apt.conf.d/

RUN \
    conda install -c conda-forge --yes \
      jupyterhub=$JUPYTERHUB_VERSION \
      'jupyterlab' \
      'jupyter_client' && \
    jupyter serverextension enable --py jupyterlab --sys-prefix && \
    conda clean -tipsy && \
    mkdir -p /etc/apt/apt.conf.d/ && \
    apt-get update && \
    apt-get install -y software-properties-common && \
    add-apt-repository -y ppa:opencpu/opencpu-2.0 --yes && \
    add-apt-repository -y ppa:opencpu/jq && \
    add-apt-repository -y ppa:ubuntugis/ubuntugis-experimental && \
    apt-get update && \
    apt-get install -y gdal-bin libgeos-dev libjq-dev nano \
      libffi-dev g++ libssl-dev libfreetype6-dev \
      python-dev libxml2-dev libxslt1-dev antiword unrtf poppler-utils pstotext tesseract-ocr \
      flac ffmpeg lame libmad0 libsox-fmt-mp3 sox libjpeg-dev swig \
      aptitude libmariadb-client-lgpl-dev fonts-dejavu gfortran gcc \
      libcairo2 mesa-common-dev libglu1-mesa-dev libudunits2-dev libgdal-dev \
      libv8-3.14-dev libprotobuf-dev protobuf-compiler libproj-dev \
          libgeos++-dev zip unzip && \
    export LD_LIBRARY_PATH=/lib:/usr/lib:/usr/local/lib && \
    aptitude install -y libmagick++-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    chmod -R a+w /opt/conda/ && \
    chown -R root:users /opt/conda && \
    chmod g+s /opt/conda

USER $NB_USER

# R packages
# install R libraries and pre-requisites
# These need to go together in conda install: 'libspatialite', 'r-rsqlite', 'r-rgdal'
# R pre-requisites
RUN sudo apt-get update && \
    sudo apt-get install -y --no-install-recommends \
    fonts-dejavu \
    tzdata \
    gfortran \
    gcc && \
    sudo apt-get clean && \
    sudo rm -rf /var/lib/apt/lists/* && \
    sudo chown -R 1000:1000 /home/jovyan/.conda/

RUN \
    conda install -c conda-forge --quiet --yes \
      # begin stack
      'r-base=3.4.1' \
      'r-irkernel=0.8*' \
      'r-plyr=1.8*' \
      'r-devtools=1.13*' \
      'r-tidyverse=1.1*' \
      'r-shiny=1.0*' \
      'r-rmarkdown=1.8*' \
      'r-forecast=8.2*' \
      'r-rsqlite=2.0*' \
      'r-reshape2=1.4*' \
      'r-nycflights13=0.2*' \
      'r-caret=6.0*' \
      'r-rcurl=1.95*' \
      'r-crayon=1.3*' \
      'r-randomforest=4.6*' \
      'r-htmltools=0.3*' \
      'r-sparklyr=0.7*' \
      'r-htmlwidgets=1.0*' \
      'r-hexbin=1.27*' && \
      # end stack
    conda clean -tipsy && \
    conda install -c conda-forge \
      -c r -c bioconda --yes \
#    conda install -c conda-forge -c brown-data-science \
#      -c r -c blaze -c bioconda --yes \
      'gdal=2.2*' \
      'libgdal=2.2*' \
      'libspatialite=4.3*' \
      'r-rsqlite' \
      'r-reticulate=1.8*' \
      'r-sp=1.2*' \
      'r-e1071=1.6*' \
      'r-rpart=4.1*' \
      'r-xml=3.98*' \
      'r-quantmod=0.4*' \
      'r-rvest=0.3*' \
      'r-maps=3.3*' \
      'r-visnetwork=2.0*' \
      'r-igraph =1.2*' \
      'r-leaflet=2.0*' \
      'r-tm=0.7*' \
      'r-sf=0.6' \
      'r-rgeos=0.3*' \
      'r-raster=2.6*' \
      'r-text2vec=0.5*' \
      'r-viridis=0.5*' \
      'r-viridislite=0.3*' \
      'geojsonio=0.0.3*' && \
    conda clean -tipsy && \
    # devtools install 'viridis' and 'cividis' to avoid errors
    R -e "install.packages(c('crayon','jqr'), dependencies=TRUE, repos='http://cran.rstudio.com/')" && \
    #R -e "devtools::install_github('sjmgarnier/viridis')" && \
    #R -e "devtools::install_github('marcosci/cividis')" && \
    #R -e "install.packages(c('raster','rgeos'), dependencies=TRUE, repos='http://cran.rstudio.com/')" && \
    #R -e "install.packages(c('geojsonio','protolite'),repos='http://cran.rstudio.com')"
    R -e "install.packages(c('protolite'),repos='http://cran.rstudio.com')"

# Install Python 3 packages
# Remove pyqt and qt pulled in for matplotlib since we're only ever going to
# use notebook-friendly backends in these images
# Unversion 'hdf5' and 'h5py' for 'rgdal' compatibility
# Unversion 'matplotlib' for 'libkml', 'rgdal' and 'r-sf' compatibility
# Specify pyqt version to avoid two choices
USER $NB_USER

RUN conda install -c conda-forge --yes \
      'nomkl=2.0*' \
      # begin stack entries
      'conda-forge::blas=*=openblas' \
      'ipywidgets=7.2*' \
      'pandas=0.23*' \
      'numexpr=2.6*' \
      'matplotlib=2.2*' \
      'scipy=1.1*' \
      'seaborn=0.8*' \
      'scikit-learn=0.19*' \
      'scikit-image=0.14*' \
      'sympy=1.1*' \
      'cython=0.28*' \
      'patsy=0.5*' \
      'statsmodels=0.9*' \
      'cloudpickle=0.5*' \
      'dill=0.2*' \
      'numba=0.38*' \
      'bokeh=0.12*' \
      'sqlalchemy=1.2*' \
      'hdf5=1.10*' \
      'h5py=2.7*' \
      'vincent=0.4.*' \
      'beautifulsoup4=4.6.*' \
      'protobuf=3.*' \
      'xlrd=1.1*' \
      # end of stack entries
      'icu=58.2' \
      'missingno=0.4*' \
      'blaze=0.11*' \
      'pandas-datareader=0.6*' \
      'wrapt=1.10.11' \
      'textblob=0.15*' \
      'jupyter_kernel_gateway=2.0*' && \
      conda remove --quiet --yes --force qt pyqt && \
      conda clean -tipsy

RUN \
    conda install -c conda-forge -c ioam -c bioconda -c anaconda -c esri --yes \
      'rpy2=2.9*' \
      'pyproj=1.9.5*' \
      'pillow=5.1*' \
      # folium unit
      'fiona=1.7.11' \
      'libkml=1.3.0' \
      # end of folium unit
      'rasterio=0.36*' \
      'geojson=2.3*' \
      'pyshp=1.2*' \
      'shapely=1.6*' \
      'obspy=1.1*' \
      'geopandas=0.3*' \
      'mplleaflet=0.0.5' \
      'plotly=2.7*' \
      'holoviews=1.10*' \
      'geoviews=1.5*' \
      'xarray=0.10*' \
      'dask=0.18*' \
      'pyke=1.1*' \
      'netcdf4=1.4*' \
      'cf_units' \
      'setuptools=39.2*' \
      'bkcharts=0.2*' \
      'basemap=1.1*' \
      'basemap-data-hires=1.1*' \
      'networkx=2.1*' \
      'cartopy=0.16*' \
      'proj4=4.9.3*' \
      'datashader=0.6*' \
      'openpyxl=2.5*' \
      'bqplot=0.10*' \
      'qgrid=1.0.5' \
      'vega3=0.13*' \
      'vega_datasets=0.5*' \
      # osmnx and numpy versions that match
      'osmnx=0.7.1' \
      'numpy=1.14' \
      # Facebook Prophet packages
      'fbprophet=0.3*' \
      'pystan=2.17*' && \
      conda remove --quiet --yes --force qt pyqt && \
      conda clean -tipsy && \
    # insert RUN here if build fails
    pip install --no-cache-dir \
      twisted==17.5.0 \
      Automat==0.3.0 \
      cufflinks==0.13.0 \
      sklearn-pandas==1.6.0 \
      epipy==0.0.2.1 \
      googletrans==2.3.0 \
      hyper==0.7.0 \
      fuzzywuzzy==0.16.0 \
      python-Levenshtein==0.12.0 \
      jupyterlab_geojson==0.4.0 \
      jupyterlab-widgets==0.6.15 \
      altair==2.1.0 \
      pylantern==0.0.18 \
      gtts==2.0.1 \
      jupyter-contrib-core==0.3.3 \
      jupyter-contrib-nbextensions==0.5.0 \
      jupyter-nbextensions-configurator==0.4.0 \
      wordcloud==1.4.1 \
      #jupyterhub==0.8.0 \
      #tornado==5.0.0 \
      #pyzmq==17.0.0 \
      tornado==4.5.2 \
      pyzmq==16.0.2 \
      uritemplate==3.0.0 && \
    jupyter contrib nbextension install --user && \
    jupyter nbextension enable --py widgetsnbextension --sys-prefix && \
    jupyter nbextensions_configurator enable --user && \
    jupyter nbextension install https://rawgit.com/jfbercher/jupyter_nbTranslate/master/nbTranslate.zip --user && \
    jupyter nbextension enable nbTranslate/main

# Activate ipywidgets extension in the environment that runs the notebook server\
USER root

ENV XDG_CACHE_HOME /home/$NB_USER/.cache/

USER $NB_USER
COPY work .

RUN conda install conda-build && \
    conda clean -tipsy && \
    sudo chmod a+x modules/*.sh && \
    sudo mkdir -p /srv/modules && \
    sudo mv modules/* /srv/modules/. && \
    sudo chmod a+w -R /home/jovyan/work/shared && \
    sudo chmod a+w -R /home/jovyan/work/geoserver && \
    sudo chmod a+w -R /home/jovyan/work/notebooks && \
    sudo chmod a+w /home/jovyan/work/notebooks/*.ipynb && \
    sudo chown -R jovyan:users /home/jovyan && \
    sudo chown -R jovyan:users /home/jovyan/work/shared && \
    sudo chown -R jovyan:users /home/jovyan/work/geoserver && \
    sudo chown -R jovyan:users /home/jovyan/work/notebooks && \
    mkdir -p /home/jovyan/.cache && \
    chmod -R a+w /home/jovyan/.cache && \
    chown -R jovyan:users /home/jovyan/.cache

WORKDIR /home/jovyan/work

# Custom logo, create backup CSS file to enable restore if jupyter-themes overwrites it and the GEEKS logo
ARG LOGO_IMAGE
RUN echo $LOGO_IMAGE && \
    mkdir -p /home/jovyan/.jupyter/custom
ADD css/custom.css /home/jovyan/.jupyter/custom/custom.css
ADD css/$LOGO_IMAGE /home/jovyan/.jupyter/custom/non-default.png
RUN sudo chown jovyan:users /home/jovyan/.jupyter/custom/non-default.png && \
    cp /home/jovyan/.jupyter/custom/custom.css /home/jovyan/.jupyter/custom/custom.css.backup

# Address iopub data error message with custom config
ADD jupyter_notebook_config.py /etc/jupyter/jupyter_notebook_config.py

RUN \
    pip install --upgrade pip && \
    pip install --no-cache-dir jupyterlab-discovery perspective-python && \
    pip install  --no-cache-dir --upgrade "ipython[all]" && \
    sudo apt-get update && \
    sudo apt-get install -y nodejs npm build-essential && \
    sudo npm cache clean -f && \
    sudo npm install -g n && \
    sudo n stable && \
    jupyter serverextension enable --sys-prefix jupyterlab_discovery && \
    jupyter labextension install jupyterlab_discovery && \
    jupyter labextension enable jupyterlab_discovery && \
    jupyter labextension install @jupyterlab/hub-extension && \
    jupyter labextension install @jupyter-widgets/jupyterlab-manager && \
    jupyter labextension install qgrid && \
    jupyter labextension install @jupyterlab/geojson-extension && \
    jupyter labextension install @pyviz/jupyterlab_pyviz && \
    jupyter labextension install @mflevine/jupyterlab_html && \
    jupyter labextension install @jupyterlab/plotly-extension && \
    jupyter labextension install @jupyterlab/vega3-extension && \
    jupyter labextension install jupyterlab_bokeh && \
    jupyter labextension install pylantern && \
    git clone https://github.com/python-visualization/folium.git && \
    pip install -r folium/requirements.txt && \
    pip install ./folium && \
    rm -fvR ./folium && \
    git clone https://github.com/pallets/jinja.git && \
    pip install ./jinja && \
    rm -fvR ./jinja && \
    git clone https://github.com/timkpaine/datacomb_jlab.git && \
    pip install ./datacomb_jlab && \
    rm -fvR ./datacomb_jlab

USER root

# restore password for sudo access
RUN \
    conda clean -tipsy && \
    apt-get update && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    sed -i 's/ NOPASSWD://g' /etc/sudoers

USER $NB_USER
